---
title: 'Project Euler 1-10'
layout: post
guid: urn:uuid:b87da13a-a4dd-402f-b06a-cef720150727
tags:
    - euler
---
## 题目1 ##
10以下的自然数中，属于3和5的倍数的有3,5,6和9，它们之和是23.
找出1000以下的自然数中，属于3和5的倍数的数字之和。

```
static int euler001() {

		int sum = 0;
		for (int i = 0; i < 1000; i++) {
			if (i % 3 == 0 && i % 5 != 0) {
				sum = sum + i;
			}
			if (i % 3 != 0 && i % 5 == 0) {
				sum = sum + i;
			}
		}

		return sum;
	}

	static int euler001_1() {

		int sum = 0;

		for (int i = 3; i < 1000; i += 3) {
			if (i % 5 != 0) {
				sum = sum + i;
			}
		}

		for (int i = 5; i < 1000; i += 5) {
			if (i % 3 != 0) {
				sum = sum + i;
			}
		}

		return sum;
	}
```

刚看到题目觉得好简单，但是后面发现里面其实有个陷阱：就是能同时被3和5整除的数会被加两次。

然后给了两种方法，第一种比较正统，第二种算是优化过了吧。1000的时候看不出差距，把数字改成100000的时候差距4毫秒，再大的话 int 类型存不下了。


